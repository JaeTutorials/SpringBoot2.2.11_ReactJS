# ORACLE
spring:
  datasource:
    #driver-class-name: oracle.jdbc.driver.OracleDriver
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    #url: jdbc:oracle:thin:@127.0.0.1:1521/xe
    url: jdbc:log4jdbc:oracle:thin:@192.168.43.151:1521/xe
    #    url: jdbc:log4jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC
    #    url: jdbc:log4jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC
    username: C##WEBWH
    password: apmsetup
#  messages:
#    basename: messages # 다국어 파일 이름을 messages로 지정, resources/messages.properties


mybatis:
  type-aliases-package: KimJeongKyun.toyShop.Router #model location
  mapper-locations: classpath:mappers/**/*.xml #xml location



server:
  port: 9999
  tomcat:
    basedir: /file_upload # C:\file_upload\work\Tomcat\localhost\ROOT


logging:
  level:
    org.springframework: DEBUG
    jdbc.sqlonly: DEBUG
    #1. jdbc.sqlonly: SQL문 만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다.
    #2. jdbc.sqltiming: SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다.
    #3. jdbc.audit: ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다.
    #4. jdbc.resultset: ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.
    #5. jdbc.resultsettable: SQL 결과 조회된 데이터의 table을 로그로 남긴다.

management:
  endpoints:
    web:
      exposure:
        include: "*" # /actuator : 서버 상태 체크


